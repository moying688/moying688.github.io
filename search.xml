<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>聚合搜索系统</title>
      <link href="/2024/03/30/%E8%81%9A%E5%90%88%E6%90%9C%E7%B4%A2%E7%B3%BB%E7%BB%9F/"/>
      <url>/2024/03/30/%E8%81%9A%E5%90%88%E6%90%9C%E7%B4%A2%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="聚合搜索系统"><a href="#聚合搜索系统" class="headerlink" title="聚合搜索系统"></a>聚合搜索系统</h1><p><img src="C:\Users\末影\AppData\Roaming\Typora\typora-user-images\image-20240330204744024.png" alt="image-20240330204744024"></p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><ul><li>vue3</li><li>ant design vue</li><li></li></ul><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><h2 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h2><h4 id="第一期"><a href="#第一期" class="headerlink" title="第一期"></a>第一期</h4><p>前端，后端初始化</p><p>前端页面开发，后端基本搜索接口</p><h4 id="第二期"><a href="#第二期" class="headerlink" title="第二期"></a>第二期</h4><p>数据抓取</p><p>聚合搜索接口开发</p><ul><li>适配器</li><li>门面模式</li></ul><p>elasticsearch 搭建</p><h4 id="第三期"><a href="#第三期" class="headerlink" title="第三期"></a>第三期</h4><p>elasticsearch使用 建表，读写数据，调用api，Java整合</p><p>数据同步（四种同步方式）</p><h4 id="第四期"><a href="#第四期" class="headerlink" title="第四期"></a>第四期</h4><p>保障接口稳定性</p><p>项目优化（关键词高亮，搜索建议，防抖节流）</p><h3 id="第一期-1"><a href="#第一期-1" class="headerlink" title="第一期"></a>第一期</h3><p>前端初始化</p><p>后端初始化</p><p>about 20min</p><p>前端页面开发，后端基本搜索接口（30 min）</p><p>整合Axios 10min</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//这里注意看官方开发文档，跟着走</span><br><span class="line">npm install -g @vue/cli </span><br><span class="line">//创建项目</span><br><span class="line">vue create antd-demo</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用组件</span></span><br><span class="line">npm i --save ant-design-vue@4.x</span><br></pre></td></tr></table></figure><p>后端采用初始模板,根据需求更改sql</p><hr><p>前端瘦身，留下主页 indexPage</p><p>拆解页面</p><p>margin: 0 auto, </p><p>max-width: 1024px</p><p>用url记录页面搜索状态，当用户刷新页面时，能够还原之前的搜索状态</p><p>url &lt;&#x3D;&#x3D;&gt; 页面状态</p><p>核心技巧： 把同步状态改成单向，即只允许url来改变页面状态</p><ol><li>让用户操作时，改变url地址（点击搜索框时，进行填充,切换tab也要填充）</li><li>当url地址改变时，去改变页面状态(监听url的改变)</li></ol><p>首先设计动态路由  搜索和切换时参数记得别掉了</p><p>watchEffect 实现监听</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_">watchEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  searchValue.<span class="property">value</span> =&#123;</span><br><span class="line">    ...initSearchValue, <span class="comment">//兜底</span></span><br><span class="line">    <span class="attr">text</span>: route.<span class="property">query</span>.<span class="property">text</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="联调后端"><a href="#联调后端" class="headerlink" title="联调后端"></a>联调后端</h4><p>引入axios</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure><p>构建实例</p><p>创建一个全局拦截器 </p><p>引入文章查询接口</p><p>:::后续补充父组件向子组件传入数据的知识</p><h3 id="第二期-1"><a href="#第二期-1" class="headerlink" title="第二期"></a>第二期</h3><ol><li>获取多种不同类型的数据源</li></ol><p>​  a. 文章（内部）</p><p>​  b. 用户（内部）</p><p>​  c. 图片 （外部,不是自己项目或者用户生成的数据）</p><ol start="2"><li>前后端搜索接口联调，跑通页面</li><li>分析现有问题 &#x3D; 》 优化， 聚合接口开发</li><li>安装es</li></ol><h4 id="获取数据源"><a href="#获取数据源" class="headerlink" title="获取数据源"></a>获取数据源</h4><h5 id="1、获取文章"><a href="#1、获取文章" class="headerlink" title="1、获取文章"></a>1、获取文章</h5><p>&#x3D;&#x3D;&#x3D;&gt; 爬虫 (悠着点)</p><p>抓取网站：xxxx.com</p><p>获取到文章后要入库（定时获取或者一次性）</p><h5 id="数据抓取"><a href="#数据抓取" class="headerlink" title="数据抓取"></a>数据抓取</h5><ol><li>直接请求数据接口（最方便）✔</li><li>等网页渲染出明文内容后，从前端页面的内容抓取</li><li>动态请求，类似于谷歌校验人机&#x3D;&gt;无头浏览器: selenium, node.js puppeteer</li></ol><p>引入工具库 HttpClient, OKHttp ,RestTemplate, Hutool(推荐),</p><h5 id="数据抓取-✔"><a href="#数据抓取-✔" class="headerlink" title="数据抓取 ✔"></a>数据抓取 ✔</h5><p>1.分析数据源</p><p>2.拿到数据后，如何处理</p><p>3.存入数据库</p><h5 id="2-用户获取"><a href="#2-用户获取" class="headerlink" title="2.用户获取"></a>2.用户获取</h5><p>额，自己的就够了，没必要的哥们</p><h5 id="3-图片获取-✔"><a href="#3-图片获取-✔" class="headerlink" title="3.图片获取 ✔"></a>3.图片获取 ✔</h5><p>实时抓取，我们网站不存这些数据，用户要搜的时候，直接从别人的网站抓取</p><p>获取到html文档，然后从中解析出需要的字段</p><p>jsoup库 —》自己看文档..</p>]]></content>
      
      
      
        <tags>
            
            <tag> 新东西，后端项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Liunx踩坑之旅</title>
      <link href="/2024/03/27/Linux/"/>
      <url>/2024/03/27/Linux/</url>
      
        <content type="html"><![CDATA[<p>description:  三行太多了，写不来</p><hr><hr><hr><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="Linux-常用命令"><a href="#Linux-常用命令" class="headerlink" title="Linux 常用命令"></a>Linux 常用命令</h2><h3 id="文件基本操作篇"><a href="#文件基本操作篇" class="headerlink" title="文件基本操作篇"></a>文件基本操作篇</h3><p>这里主要是描述文件的移动，复制，粘贴，额，后续学的多了自然有更多操作，俺现在不知道啊。。。</p><h4 id="增删改"><a href="#增删改" class="headerlink" title="增删改"></a>增删改</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//创建新的文件。。。</span><br><span class="line">touch your_file </span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">mkdir your_directories</span><br><span class="line">//创建多级目录加入参数</span><br><span class="line">mkdir -p father/son/grandson</span><br><span class="line"></span><br><span class="line">----------------------</span><br><span class="line"><span class="meta prompt_">cp---&gt;</span><span class="language-bash">文件复制</span></span><br><span class="line">cp your_file father/son/grandson</span><br><span class="line"></span><br><span class="line">复制目录的话需要加入参数-r | -R</span><br><span class="line">cp -r father family</span><br><span class="line">--------------</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">rm---&gt;</span><span class="language-bash">删除文件,嗨嗨删库跑路 sudo <span class="built_in">rm</span> -rf /*</span></span><br><span class="line">-f是如果想忽略g提示，直接删除文件，可以使用 -f 参数强制删除： -r递归执行</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mv---&gt;</span><span class="language-bash">移动文件，类似于Ctrl+x</span></span><br><span class="line">mv 源文件 目的目录</span><br><span class="line">mv test_file Documents </span><br><span class="line"></span><br><span class="line">--新玩法 重命名-----------&gt; mv 旧的文件名 新的文件名</span><br><span class="line">mv your_file new_your_file</span><br><span class="line"></span><br><span class="line">---批量重命名(rename)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先批量创建文件</span></span><br><span class="line">touch your_file&#123;1..5&#125;.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">批量改名--额，我的建议是去隔壁Java8看看正则表达式</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">不过这里还有涉及到sed命令，所以先写着，鸽子一下</span></span><br><span class="line">rename &#x27;s/\.txt/\.c/&#x27; *.txt</span><br></pre></td></tr></table></figure><h4 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h4><p><code>cat</code> —<code>tac</code> —<code>nl</code></p><p>如其名，tac是倒序显示</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat -n passwd 加上-n显示行号</span><br><span class="line"></span><br><span class="line">nl 命令，添加行号并打印，这是个比 cat -n 更专业的行号打印命令。</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-b : 指定添加行号的方式，主要有两种：</span><br><span class="line">    -b a:表示无论是否为空行，同样列出行号(&quot;cat -n&quot;就是这种方式)</span><br><span class="line">    -b t:只列出非空行的编号并列出（默认为这种方式）</span><br><span class="line">-n : 设置行号的样式，主要有三种：</span><br><span class="line">    -n ln:在行号字段最左端显示</span><br><span class="line">    -n rn:在行号字段最右边显示，且不加 0</span><br><span class="line">    -n rz:在行号字段最右边显示，且加 0</span><br><span class="line">-w : 行号字段占用的位数(默认为 6 位)</span><br></pre></td></tr></table></figure><p>额，more和less讲得没这么多，鸽掉！！相当于只显示一个屏幕的信息而不是像cat那样，信息太多了，会让你的屏幕向下移动</p><p><code>tail head</code></p><p>这俩就相当于一个显示倒数几行，一个正数几行</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">tail</span> -n 10 /etc/passwd</span>                </span><br></pre></td></tr></table></figure><h4 id="查看文件类型"><a href="#查看文件类型" class="headerlink" title="查看文件类型"></a>查看文件类型</h4><p><code>file</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">file your_file.xxx</span><br></pre></td></tr></table></figure><h4 id="搜索文件"><a href="#搜索文件" class="headerlink" title="搜索文件"></a>搜索文件</h4><p><code>whereis which find locate</code></p><p>挺多哈，find的话我感觉最重要。。目前我是用的多一些</p><hr><p><code>whereis</code> 只能搜索二进制文件(-b)，man 帮助文件(-m)和源代码文件(-s)。如果想要获得更全面的搜索结果可以使用 <code>locate</code> 命令。</p><hr><p>locate则不是内置命令，需要去安装，而且每次查找之前偶尔还得更新一下数据库</p><p>直接cv过来算了</p><blockquote><p>使用 <code>locate</code> 命令查找文件也不会遍历硬盘，它通过查询 <code>/var/lib/mlocate/mlocate.db</code> 数据库来检索信息。不过这个数据库也不是实时更新的，系统会使用定时任务每天自动执行 <code>updatedb</code> 命令来更新数据库。所以有时候你刚添加的文件，它可能会找不到，需要手动执行一次 <code>updatedb</code> 命令（在我们的环境中必须先执行一次该命令）。注意这个命令也不是内置的命令，例如在我们的环境中就需要手动安装，然后执行更新。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;$ sudo apt-get update</span><br><span class="line">&gt;$ sudo apt-get install locate</span><br><span class="line">&gt;$ sudo updatedb</span><br></pre></td></tr></table></figure></blockquote><blockquote><blockquote><p>它可以用来查找指定目录下的不同文件类型，如查找 &#x2F;etc 下所有以 sh 开头的文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ locate /etc/sh</span><br></pre></td></tr></table></figure></blockquote></blockquote><p>这个需要记得的还有，使用通配符的时候记得加上转义符号</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">locate /usr/share/\*.jpg</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;&#x3D;&#x3D;which鸽掉，俺也还没用过</p><h4 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h4><p>这个我觉得确实得单独拎出来,因为他这个-exec看着就很吊</p><blockquote><p>find [path][option] [action] </p></blockquote><p>先来讲讲参数吧</p><ul><li><p>-name  文件名匹配</p></li><li><p>-mtime 最后修改文件属性的时间 </p><ul><li><code>-mtime n</code>：n 为数字，表示为在 n 天之前的“一天之内”修改过的文件</li><li><code>-mtime +n</code>：列出在 n 天之前（不包含 n 天本身）被修改过的文件</li><li><code>-mtime -n</code>：列出在 n 天之内（包含 n 天本身）被修改过的文件</li><li><code>-newer file</code>：file 为一个已存在的文件，列出比 file 还要新的文件名</li></ul></li><li><p>-size  文件大小    +表示大于，-表示小于 默认单位b </p></li><li><p>-exec 对搜索到的文件进行命令, such 重命名，删除，移动</p><ul><li><pre><code class="shell">find ~ -size +1 -exec mv &#123;&#125; /temp \;<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  - \;表示结束符号</span><br><span class="line">  </span><br><span class="line">- &#123;&#125;表示占位符，表示搜索到的文件</span><br><span class="line"></span><br><span class="line">- </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 文件打包，压缩篇</span><br><span class="line"></span><br><span class="line">这里描述的是关于zip，tar，gzip相关知识。</span><br><span class="line"></span><br><span class="line">#### tar相关</span><br><span class="line"></span><br><span class="line">- `-x`: 提取（解压）文件</span><br><span class="line">- `-z`: 使用gzip压缩格式</span><br><span class="line">- `-v`: 显示详细的输出信息</span><br><span class="line">- `-f`: 指定要操作的文件</span><br><span class="line">- `--wildcards`: 启用通配符模式</span><br><span class="line">- `&#x27;*example*&#x27;`: 匹配所有文件名中包含&quot;example&quot;的文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 休闲娱乐</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">xeyes</span><br><span class="line"></span><br><span class="line">nohup xeyes &amp;//h</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h3 id="在Linux中使用帮助、"><a href="#在Linux中使用帮助、" class="headerlink" title="在Linux中使用帮助、"></a>在Linux中使用帮助、</h3><p>这个玩意难受哟，help，man，这些。。。感觉目前不太适合咱</p><h3 id="开发分割线——————————————"><a href="#开发分割线——————————————" class="headerlink" title="开发分割线——————————————-"></a>开发分割线——————————————-</h3><hr><h2 id="docker使用"><a href="#docker使用" class="headerlink" title="docker使用"></a>docker使用</h2><h3 id="rabbitmq"><a href="#rabbitmq" class="headerlink" title="rabbitmq"></a>rabbitmq</h3>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 新东西 </tag>
            
            <tag> centos </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java8基础知识</title>
      <link href="/2024/03/22/Java%E5%9F%BA%E7%A1%80/Java8/"/>
      <url>/2024/03/22/Java%E5%9F%BA%E7%A1%80/Java8/</url>
      
        <content type="html"><![CDATA[<p>daisiki，在此见证Java8的预习，啊不，学习记录。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 新东西 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud学习</title>
      <link href="/2024/03/22/Java%E5%9F%BA%E7%A1%80/SpringCloud/"/>
      <url>/2024/03/22/Java%E5%9F%BA%E7%A1%80/SpringCloud/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/03/19/%E7%AE%97%E6%B3%95/hello-world/"/>
      <url>/2024/03/19/%E7%AE%97%E6%B3%95/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> newTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue的学习之路</title>
      <link href="/2024/03/19/%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/03/19/%E5%89%8D%E7%AB%AF/Vue%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h1><p> (｡･∀･)ﾉﾞ，这还有啥why，混口饭吃，有个能创建网站的前置能力，已经很足够了</p><p><code>vue</code></p><h1 id="初始工程"><a href="#初始工程" class="headerlink" title="初始工程"></a>初始工程</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">创建命令</span><br><span class="line">npm create vue@latest</span><br><span class="line"></span><br><span class="line">cd your_demo</span><br><span class="line">npm install</span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure><h2 id="重要文件"><a href="#重要文件" class="headerlink" title="重要文件"></a>重要文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node_moudles 组件库</span><br><span class="line">public </span><br><span class="line">src 主要编写文件</span><br><span class="line">index.html 入口文件</span><br><span class="line">pack-lock.json package.json 配置依赖等</span><br><span class="line">vite.config..js 配置文件</span><br></pre></td></tr></table></figure><p><img src="C:\Users\末影\AppData\Roaming\Typora\typora-user-images\image-20240322173222513.png" alt="image-20240322173222513"></p><h2 id="computed"><a href="#computed" class="headerlink" title="computed"></a>computed</h2><p>作用： 根据已有数据计算新数据</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span></span><br><span class="line">        姓: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        全名: <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;  fullName &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeFullname&quot;</span>&gt;</span>全名改为：xxx<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; computed, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> firstName = <span class="title function_">ref</span>(<span class="string">&#x27;zhang&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> lastName = <span class="title function_">ref</span>(<span class="string">&#x27;san&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">     <span class="comment">// 计算属性——只读取，不修改</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/* let fullName = computed(()=&gt;&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    return firstName.value + &#x27;-&#x27; + lastName.value</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">  &#125;) */</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">let</span> fullName = <span class="title function_">computed</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">get</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> firstName.<span class="property">value</span> +<span class="string">&quot;-&quot;</span>+lastName.<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//修改</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">set</span>(<span class="params">val</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&quot;有人修改乐fullName&quot;</span>,val)</span></span><br><span class="line"><span class="language-javascript">        firstName.<span class="property">value</span>=val.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">        lastName.<span class="property">value</span>=val.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">function</span> <span class="title function_">changeFullname</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    fullName.<span class="property">value</span>=<span class="string">&quot;li-si&quot;</span></span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="！路由"><a href="#！路由" class="headerlink" title="！路由"></a>！路由</h1><p>害。。。速成嘛，就先重点路由吧</p><blockquote><p>导航区，展示区</p></blockquote><blockquote><p>指定路由的具体规则</p></blockquote><blockquote><p>形成一个个的xxx.vue</p></blockquote><p>需要提前想好路由工作模式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建一个路由器并且暴露出去</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> person <span class="keyword">from</span> <span class="string">&#x27;@/views/person.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">News</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/News.vue&#x27;</span></span><br><span class="line"><span class="comment">//创建路由器(rnm，这里不要用&#123;&#125;把Home他们包起来)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">    <span class="attr">history</span>:<span class="title function_">createWebHistory</span>(), <span class="comment">// 路由器的工作模式</span></span><br><span class="line">    <span class="comment">//配置路由</span></span><br><span class="line">    <span class="attr">routes</span>:[ <span class="comment">//一个个路由规则</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/person&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: person</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="attr">path</span>: <span class="string">&#x27;/news&#x27;</span>,</span><br><span class="line">           <span class="attr">component</span>: <span class="title class_">News</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router </span><br></pre></td></tr></table></figure><h2 id="【编程式导航】"><a href="#【编程式导航】" class="headerlink" title="【编程式导航】"></a>【编程式导航】</h2><p>路由组件的两个重要的属性：<code>$route</code>和<code>$router</code>变成了两个<code>hooks</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useRoute,useRouter&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>() <span class="comment">//解构传入的数据</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>() <span class="comment">//路由器，进行跳转</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">query</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(route.<span class="property">parmas</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(router.<span class="property">push</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(router.<span class="property">replace</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//news.vue</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;news in newsList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;news.id&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">            path: &#x27;/news/detail&#x27;,</span></span></span><br><span class="line"><span class="string"><span class="tag">            query: &#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">                id: news.id,</span></span></span><br><span class="line"><span class="string"><span class="tag">                name: news.name,</span></span></span><br><span class="line"><span class="string"><span class="tag">                context: news.context,</span></span></span><br><span class="line"><span class="string"><span class="tag">                // News: news//不行</span></span></span><br><span class="line"><span class="string"><span class="tag">                car: car</span></span></span><br><span class="line"><span class="string"><span class="tag">            &#125;</span></span></span><br><span class="line"><span class="string"><span class="tag">        &#125;&quot;</span>&gt;</span>&#123;&#123; news.name &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>&#123;&#123; id &#125;&#125;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>&#123;&#123; context &#125;&#125;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>&#123;&#123; car&#125;&#125;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>&#123;&#123; query.id &#125;&#125;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>&#123;&#123; query.name &#125;&#125;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>&#123;&#123; query.context &#125;&#125;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>&#123;&#123; query.car&#125;&#125;<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; useRoute,useRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; toRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;useDetailStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/details&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//接受props</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">defineProps</span>([<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;context&#x27;</span>,<span class="string">&#x27;car&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript">    ------</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> route=<span class="title function_">useRoute</span>() <span class="comment">//hook</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> router=<span class="title function_">useRouter</span>() <span class="comment">//路由器</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> &#123;query&#125;= <span class="title function_">toRefs</span>(route) <span class="comment">//解构</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="pinia"><a href="#pinia" class="headerlink" title="pinia"></a>pinia</h2><p>有点类似与Java的ThreadLocal？</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">npm install pinia</span><br><span class="line"></span><br><span class="line"><span class="comment">//js中引入</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router/index&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pinia=<span class="title function_">createPinia</span>()</span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line">app.<span class="title function_">use</span>(router).<span class="title function_">use</span>(pinia)</span><br><span class="line">.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先是在js文件中去定义数据以及方法，还有暴露出来</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// import &#123; defineStore &#125; from &quot;pinia&quot;;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// export const useDetailStore=defineStore(&#x27;details&#x27;,&#123;</span></span><br><span class="line"><span class="comment">//     state()&#123;</span></span><br><span class="line"><span class="comment">//         return &#123;</span></span><br><span class="line"><span class="comment">//             toy:&quot;atm&quot;,</span></span><br><span class="line"><span class="comment">//             sum: 666,</span></span><br><span class="line"><span class="comment">//             todayNews:[</span></span><br><span class="line"><span class="comment">//                 &#123;id:&#x27;yuysada01&#x27;,content:&#x27;你今天有点怪，哪里怪？怪好看的！&#x27;&#125;,</span></span><br><span class="line"><span class="comment">//                 &#123;id:&#x27;yuysada02&#x27;,content:&#x27;草莓、蓝莓、蔓越莓，你想我了没？&#x27;&#125;,</span></span><br><span class="line"><span class="comment">//                    &#123;id:&#x27;yuysada03&#x27;,content:&#x27;心里给你留了一块地，我的死心塌地&#x27;&#125;</span></span><br><span class="line"><span class="comment">//             ]</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;,</span></span><br><span class="line"><span class="comment">//     //计算</span></span><br><span class="line"><span class="comment">//     getters:&#123;&#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//组合式写法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useDetailStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;detials&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> toy = <span class="title function_">ref</span>(<span class="string">&#x27;atm&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> todayNews = <span class="title function_">ref</span>([</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="string">&#x27;yuysada01&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;你今天有点怪，哪里怪？怪好看的！&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="string">&#x27;yuysada02&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;草莓、蓝莓、蔓越莓，你想我了没？&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="string">&#x27;yuysada03&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;心里给你留了一块地，我的死心塌地&#x27;</span> &#125;</span><br><span class="line">    ])</span><br><span class="line">    <span class="keyword">const</span> sum = <span class="title function_">ref</span>(<span class="number">399</span>)</span><br><span class="line">   <span class="keyword">const</span> <span class="title function_">change</span>=(<span class="params">newToy</span>)=&gt;&#123;</span><br><span class="line">    toy.<span class="property">value</span>=newToy</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;toy,todayNews,sum,change&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>而接收的话也是有好几种的</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useDetailStore&#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/details&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="comment">//先定义出来</span></span><br><span class="line"><span class="keyword">const</span> detailStore=<span class="title function_">useDetailStore</span>()</span><br><span class="line"><span class="comment">//第一，直接解构出来</span></span><br><span class="line"><span class="keyword">const</span> &#123;toy,sum,todayNews&#125; = <span class="title function_">storeToRefs</span>(detailStore)</span><br><span class="line"><span class="comment">//第二,不再是响应式</span></span><br><span class="line"><span class="comment">// let toy=detailStore.toy</span></span><br><span class="line"><span class="comment">// let sum=detailStore.sum</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//感觉有点迷糊</span></span><br><span class="line"><span class="comment">// let toy=ref(detailStore.toy)</span></span><br><span class="line"><span class="comment">// let sum=ref(detailStore.sum)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//details.js中</span></span><br><span class="line"> <span class="keyword">const</span> <span class="title function_">change</span>=(<span class="params">newToy</span>)=&gt;&#123;</span><br><span class="line">    toy.<span class="property">value</span>=newToy</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">changeStore</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// detailStore.$patch(&#123;</span></span><br><span class="line">  <span class="comment">//   toy: &quot;wlgq&quot;,</span></span><br><span class="line">  <span class="comment">//   sum: 555</span></span><br><span class="line">  <span class="comment">// &#125;)</span></span><br><span class="line">  toy.<span class="property">value</span>=<span class="string">&quot;aiodsjfodis&quot;</span></span><br><span class="line">  detailStore.<span class="title function_">change</span>(toy.<span class="property">value</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 新东西 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora-vue-theme主题介绍</title>
      <link href="/2018/09/07/%E7%A4%BA%E4%BE%8B/"/>
      <url>/2018/09/07/%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
